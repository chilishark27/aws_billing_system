pipeline {
    agent any

    stages {
    
        stage('Pull') {
            steps {
                git branch: 'main', credentialsId: '90f8e68f-8771-4dec-b6fc-0ab717ef8cba', url: 'https://github.com/chilishark27/aws_billing_system.git'
            }
        }
        stage('stop docker') {
            steps {
                sh '''
                    docker-compose down
                '''
            }
        }
        stage('Build') {
            steps {
                sh '''
                    docker-compose build
                '''
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    docker-compose up -d
                '''
            }
        }
        stage('Compelete'){
            steps {
                echo "Successfully"
            }
        }
    }
}



FROM jenkins/jenkins:2.516.1-jdk21

USER root

# 安装 docker CLI
RUN apt-get update && apt-get install -y \
    lsb-release \
    ca-certificates \
    curl \
    gnupg \
    sudo \
    && install -m 0755 -d /etc/apt/keyrings \
    && curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc \
    && chmod a+r /etc/apt/keyrings/docker.asc \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
        https://download.docker.com/linux/debian $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable" \
        | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install -y docker-ce-cli \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 安装 docker-compose v2 CLI
RUN curl -SL "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" \
      -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose\
    && RUN ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

# 创建 docker 组并将 jenkins 用户加入其中（匹配宿主机 docker.sock 的 group ID）
RUN groupadd -for -g 998 docker \
    && usermod -aG docker jenkins \
    && echo 'jenkins ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# 安装git
RUN apt-get install git
USER jenkins

# 安装 Jenkins 插件
RUN jenkins-plugin-cli --plugins "blueocean docker-workflow json-path-api"

a


docker run \
  --name jenkins \
  -u root \
  --restart=on-failure \
  --detach \
  --network jenkins \
  --privileged \
  --publish 8080:8080 \
  --publish 50000:50000 \
  --volume /data/jenkins:/var/jenkins_home \
  --volume jenkins-docker-certs:/certs/client:ro \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v $(which docker):/usr/bin/docker \
  -v $(which docker-compose):/usr/bin/docker-compose \
  myjenkins-blueocean:2.516.1-4


docker run   --name jenkins-blueocean   --restart=on-failure   --detach   --network jenkins   --env DOCKER_HOST=tcp://docker:2376   --env DOCKER_CERT_PATH=/certs/client   --env DOCKER_TLS_VERIFY=1   --publish 8080:8080   --publish 50000:50000   --volume jenkins-data:/var/jenkins_home   --volume jenkins-docker-certs:/certs/client:ro   myjenkins-blueocean:2.516.1-3
